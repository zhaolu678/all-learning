Lambda表达式就是 匿名内部类的另一种更加简洁的语法表达。
 
Lambda 表达式的基础语法：java8中引入了新的操作符“->” 该操作符称为剪头操作符或 Lambda操作符
                        箭头操作符将Lamdba表达式拆分成两部分：
                         
 左侧：Lambda 表达式的参数列表
 右侧：Lambda 表达式中所需要执行的功能，即Lambda体。
 
 语法格式一：无参数，无返回值
 			() -> System.out.println("Hello Lambda");
 
 语法格式二：有一个参数，无返回值
 			(x) -> System.out.println(x)
 
 语法格式三：有一个参数，小括号可以省略不写
 			x -> System.out.println(x)
 
 语法格式四：有2个以上的参数，有返回值，并且Lambda体有多条语句
 			Compartor<Integer> com = (x,y) ->{
 				System.out.println("函数式接口");
 				return Integer.compare(x,y);
 			}

语法格式五：若Lambda体中只有一条语句，return和大括号都可以省略
			Compartor<Integer> com =(x,y) -> System.out.println(""); 			

语法格式六：Lambda表达式中参数类型可以省略不写，因为JVM编译器可以通过上下文推断出数据类型，即“类型推断”
			(x,y) -> Integer.compare(x,y);
 			
上联：左右遇一括号省
下联：左侧推断类型省
横批：能省则省			
 			
 			
 
 